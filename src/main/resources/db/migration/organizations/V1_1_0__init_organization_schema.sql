CREATE TABLE IF NOT EXISTS auth_user
(
    user_id       BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_name     VARCHAR UNIQUE NOT NULL,
    password      VARCHAR(60)    NOT NULL,
    first_name    VARCHAR(30)    NOT NULL,
    last_name     VARCHAR(30),
    country_code  VARCHAR,
    mobile_number BIGINT UNIQUE,
    email         VARCHAR UNIQUE,
    active        boolean,
    is_admin      boolean,
    org_id        BIGINT,
    CONSTRAINT fk_organization FOREIGN KEY (org_id) REFERENCES public.organization (org_id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS role
(
    role_id     BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    role_name   VARCHAR(30) UNIQUE NOT NULL,
    description VARCHAR
);

CREATE TABLE IF NOT EXISTS privilege
(
    privilege_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name         VARCHAR(50) UNIQUE NOT NULL
);

CREATE TABLE IF NOT EXISTS auth_user_roles
(
    user_id BIGINT NOT NULL,
    role_id BIGINT NOT NULL,
    CONSTRAINT fk_role FOREIGN KEY (role_id) REFERENCES role (role_id) ON DELETE CASCADE,
    CONSTRAINT fk_user FOREIGN KEY (user_id) REFERENCES auth_user (user_id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS role_privileges
(
    role_id      BIGINT NOT NULL,
    privilege_id BIGINT NOT NULL,
    PRIMARY KEY (role_id, privilege_id),
    CONSTRAINT fk_role FOREIGN KEY (role_id) REFERENCES role (role_id) ON DELETE CASCADE,
    CONSTRAINT fk_privilege FOREIGN KEY (privilege_id) REFERENCES privilege (privilege_id) ON DELETE CASCADE
);
-- Temporary table for custom id generation example --
CREATE TABLE IF NOT EXISTS test_entity
(
    id     VARCHAR PRIMARY KEY,
    name   VARCHAR,
    org_id BIGINT,
    CONSTRAINT fk_organization FOREIGN KEY (org_id) REFERENCES organization (org_id)
);

CREATE SEQUENCE IF NOT EXISTS test_sequence;



CREATE TABLE IF NOT EXISTS category_group
(
    group_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name     VARCHAR UNIQUE NOT NULL
);

CREATE TABLE IF NOT EXISTS category
(
    category_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name        VARCHAR UNIQUE NOT NULL,
    group_id    BIGINT,
    CONSTRAINT fk_category_group FOREIGN KEY (group_id) REFERENCES category_group (group_id)
);

INSERT INTO role(role_name, description)
VALUES ('ROLE_ADMIN', 'Admin role');

INSERT INTO privilege(name)
values ('READ_PRIVILEGE');
INSERT INTO privilege(name)
values ('WRITE_PRIVILEGE');

INSERT INTO role_privileges(role_id, privilege_id)
values (1, 1);
INSERT INTO role_privileges(role_id, privilege_id)
values (1, 2);


