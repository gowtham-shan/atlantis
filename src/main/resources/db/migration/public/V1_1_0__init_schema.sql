CREATE TABLE IF NOT EXISTS organization
(
    org_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name   VARCHAR NOT NULL
);

CREATE TABLE IF NOT EXISTS auth_user
(
    user_id       BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_name     VARCHAR(50) NOT NULL,
    password      VARCHAR(60) NOT NULL,
    first_name    VARCHAR(30) NOT NULL,
    last_name     VARCHAR(30),
    country_code  VARCHAR,
    mobile_number BIGINT      NOT NULL,
    active        boolean,
    org_id        BIGINT,
    CONSTRAINT fk_organization FOREIGN KEY (org_id) REFERENCES organization (org_id) ON DELETE CASCADE,
    CONSTRAINT unique_key UNIQUE (user_name, org_id)
);

CREATE TABLE IF NOT EXISTS groups
(
    group_id   BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    group_name VARCHAR(30) UNIQUE NOT NULL
);

CREATE TABLE IF NOT EXISTS role
(
    role_id     BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    role_name   VARCHAR(30) UNIQUE NOT NULL,
    description VARCHAR
);

CREATE TABLE IF NOT EXISTS privilege
(
    privilege_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name         VARCHAR(50) UNIQUE NOT NULL
);

CREATE TABLE IF NOT EXISTS user_groups
(
    user_id  BIGINT NOT NULL,
    group_id BIGINT NOT NULL,
    PRIMARY KEY (user_id, group_id),
    CONSTRAINT fk_users FOREIGN KEY (user_id) REFERENCES auth_user (user_id) ON DELETE CASCADE,
    CONSTRAINT fk_groups FOREIGN KEY (group_id) REFERENCES groups (group_id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS group_roles
(
    role_id  BIGINT NOT NULL,
    group_id BIGINT NOT NULL,
    CONSTRAINT fk_role FOREIGN KEY (role_id) REFERENCES role (role_id) ON DELETE CASCADE,
    CONSTRAINT fk_group FOREIGN KEY (group_id) REFERENCES groups (group_id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS role_privileges
(
    role_id      BIGINT NOT NULL,
    privilege_id BIGINT NOT NULL,
    PRIMARY KEY (role_id, privilege_id),
    CONSTRAINT fk_role FOREIGN KEY (role_id) REFERENCES role (role_id) ON DELETE CASCADE,
    CONSTRAINT fk_privilege FOREIGN KEY (privilege_id) REFERENCES privilege (privilege_id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS custom_rev_info
(
    id        bigint generated by default as identity,
    timestamp bigint,
    username  varchar,
    primary key (id)
);

CREATE TABLE IF NOT EXISTS organization_aud
(
    org_id  BIGINT  NOT NULL,
    REV     integer not null,
    REVTYPE int,
    REVEND  INTEGER,
    name    VARCHAR,
    PRIMARY KEY (org_id, rev),
    CONSTRAINT fk_revision FOREIGN KEY (REV) REFERENCES custom_rev_info (id)
);